
FROM nvcr.io/nvidia/deepstream:6.0-devel

RUN echo "deb https://developer.download.nvidia.com.cn/compute/cuda/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/cuda.list
ARG DEBIAN_FRONTEND=noninteractive
#RUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list
#RUN  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC
RUN  apt-get update -q && apt-get install -y -q git m4 autoconf automake cmake make git gcc g++ pkg-config build-essential ca-certificates wget && rm -rf /var/lib/apt/lists/*
RUN  apt-get update -q && apt-get install -y -q python-dev python3 python3-pip python3-dev \
     libglib2.0-dev libglib2.0-dev-bin python-gi-dev libtool && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /opt/dist /opt/build

RUN export GST_LIBS="-lgstreamer-1.0 -lgobject-2.0 -lglib-2.0" && \
    export GST_CFLAGS="-pthread -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include" && \
    cd /opt/build && \
    git clone https://github.com/GStreamer/gst-python.git && \
    cd gst-python && \
    git checkout 1a8f48a && \
    ./autogen.sh PYTHON=python3 && \
    ./configure PYTHON=python3 && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

RUN pip3 install --upgrade cmake==3.18.2 && \
    pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/  pytest

ARG PYBIND_REPO=https://github.com/pybind/pybind11
RUN cd /opt/build && \
    git clone ${PYBIND_REPO}
#    cd pybind11 && \
#    mkdir build && \
#    cd build && \
#    cmake .. && \
#    make -j$(nproc) && \
#    make install DESTDIR=/opt/dist && \
#    make install

ARG DS_APP_TAG=v1.1.0
ARG DS_APP_REPO=https://github.com/NVIDIA-AI-IOT/deepstream_python_apps
ENV C_INCLUDE_PATH=${C_INCLUDE_PATH}:/usr/local/include/pybind11
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib
RUN cd /opt/nvidia/deepstream/deepstream/sources && \
    git clone ${DS_APP_REPO} && \
    cd deepstream_python_apps && \
    git checkout -b test ${DS_APP_TAG} && \
    git submodule update --init && \
    mkdir -p 3rdparty && \
    cp -r /opt/build/pybind11 3rdparty/. && \
    mkdir bindings/build && \
    cd bindings/build && \
    cmake .. && \
    make -j$(nproc) && \
    cp pyds-1.1.0-py3-none*.whl /opt/dist

RUN apt-get update -q && apt-get install -y -q python3-gi python3-dev python3-gst-1.0 libgstrtspserver-1.0-0 gstreamer1.0-rtsp libgirepository1.0-dev gobject-introspection gir1.2-gst-rtsp-server-1.0 && rm -rf /var/lib/apt/lists/*

ARG OPENCV_TAG=4.5.5
ARG OPENCV_REPO=https://github.com/opencv/opencv.git
ARG OPENCV_CONTRIB_REPO=https://github.com/opencv/opencv_contrib.git
RUN cd /opt/build && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv_contrib && \
    git checkout ${OPENCV_TAG}

RUN cd /opt/build && \
    git clone https://github.com/opencv/opencv.git && \
    cd opencv && \
    git checkout ${OPENCV_TAG}

ARG CUDA_ARCH_CAP=5.3,6.0,6.1,7.0,7.5
ARG CUDA_ARCH_PTX=7.5
ARG OPENCV_CONTRIB_MODULES_PATH=/opt/build/opencv_contrib/modules/
RUN cd /opt/build/opencv && \
    mkdir build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_PYTHON_EXAMPLES=ON -D INSTALL_C_EXAMPLES=OFF -D OPENCV_ENABLE_NONFREE=ON -D WITH_CUDA=ON -D WITH_CUDNN=ON -D OPENCV_DNN_CUDA=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D CUDA_ARCH_BIN=${CUDA_ARCH_CAP} -D CUDA_ARCH_PTX=${CUDA_ARCH_PTX} -D WITH_CUBLAS=1 -D OPENCV_EXTRA_MODULES_PATH=${OPENCV_CONTRIB_MODULES_PATH} -D HAVE_opencv_python3=ON -D PYTHON_EXECUTABLE=/usr/bin/python3 -D BUILD_EXAMPLES=ON .. && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install && \
    ldconfig

COPY requirements.txt /home/
RUN pip3 install -r /home/requirements.txt

ARG YOLOV5_TAG=v6.0
ARG YOLOV5_REPO=https://github.com/ultralytics/yolov5
RUN cd /opt/build/ && \
    git clone ${YOLOV5_REPO} && \
    cd yolov5 && \
    git checkout v6.0

COPY gen_wts_yoloV5.py /opt/build/yolov5/

RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/all-libs.conf && ldconfig
RUN pip3 install /opt/dist/pyds-1.1.0-py3-none*.whl && rm -f /opt/dist/pyds-1.1.0-py3-none*.whl

ENV GST_LIBS="-lgstreamer-1.0 -lgobject-2.0 -lglib-2.0"
ENV GST_CFLAGS="-pthread -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include"


WORKDIR /home


